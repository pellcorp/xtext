/*
 * generated by Xtext
 */
package com.pellcorp.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.pellcorp.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.pellcorp.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		com.pellcorp.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser result = new com.pellcorp.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getMyIDAccess().getAlternatives(), "rule__MyID__Alternatives");
					put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
					put(grammarAccess.getFieldAccess().getAlternatives_3(), "rule__Field__Alternatives_3");
					put(grammarAccess.getFieldAccess().getAlternatives_3_0_1_3(), "rule__Field__Alternatives_3_0_1_3");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_3(), "rule__Model__Group_3__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getEntityAccess().getGroup_3(), "rule__Entity__Group_3__0");
					put(grammarAccess.getBuiltInTypeAccess().getGroup(), "rule__BuiltInType__Group__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getFieldAccess().getGroup_3_0(), "rule__Field__Group_3_0__0");
					put(grammarAccess.getFieldAccess().getGroup_3_0_0(), "rule__Field__Group_3_0_0__0");
					put(grammarAccess.getFieldAccess().getGroup_3_0_1(), "rule__Field__Group_3_0_1__0");
					put(grammarAccess.getChampionChallengerAccess().getGroup(), "rule__ChampionChallenger__Group__0");
					put(grammarAccess.getChampionChallengerAccess().getGroup_4(), "rule__ChampionChallenger__Group_4__0");
					put(grammarAccess.getChampionChallengerAccess().getGroup_7(), "rule__ChampionChallenger__Group_7__0");
					put(grammarAccess.getChampionChallengerPortAccess().getGroup(), "rule__ChampionChallengerPort__Group__0");
					put(grammarAccess.getModelAccess().getNameAssignment_1(), "rule__Model__NameAssignment_1");
					put(grammarAccess.getModelAccess().getDescriptionAssignment_3_1(), "rule__Model__DescriptionAssignment_3_1");
					put(grammarAccess.getModelAccess().getDataTypesAssignment_4(), "rule__Model__DataTypesAssignment_4");
					put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
					put(grammarAccess.getEntityAccess().getDescriptionAssignment_3_1(), "rule__Entity__DescriptionAssignment_3_1");
					put(grammarAccess.getEntityAccess().getFieldsAssignment_4(), "rule__Entity__FieldsAssignment_4");
					put(grammarAccess.getBuiltInTypeAccess().getNameAssignment_0(), "rule__BuiltInType__NameAssignment_0");
					put(grammarAccess.getBuiltInTypeAccess().getDescriptionAssignment_1(), "rule__BuiltInType__DescriptionAssignment_1");
					put(grammarAccess.getFieldAccess().getNameAssignment_0(), "rule__Field__NameAssignment_0");
					put(grammarAccess.getFieldAccess().getTypeAssignment_2(), "rule__Field__TypeAssignment_2");
					put(grammarAccess.getFieldAccess().getDescriptionAssignment_3_0_0_1(), "rule__Field__DescriptionAssignment_3_0_0_1");
					put(grammarAccess.getFieldAccess().getLowerAssignment_3_0_1_1(), "rule__Field__LowerAssignment_3_0_1_1");
					put(grammarAccess.getFieldAccess().getUpperUnlimitedAssignment_3_0_1_3_0(), "rule__Field__UpperUnlimitedAssignment_3_0_1_3_0");
					put(grammarAccess.getFieldAccess().getUpperAssignment_3_0_1_3_1(), "rule__Field__UpperAssignment_3_0_1_3_1");
					put(grammarAccess.getChampionChallengerAccess().getNameAssignment_2(), "rule__ChampionChallenger__NameAssignment_2");
					put(grammarAccess.getChampionChallengerAccess().getDescriptionAssignment_4_1(), "rule__ChampionChallenger__DescriptionAssignment_4_1");
					put(grammarAccess.getChampionChallengerAccess().getChampionPortAssignment_6(), "rule__ChampionChallenger__ChampionPortAssignment_6");
					put(grammarAccess.getChampionChallengerAccess().getChallengerPortsAssignment_7_1(), "rule__ChampionChallenger__ChallengerPortsAssignment_7_1");
					put(grammarAccess.getChampionChallengerPortAccess().getNameAssignment_0(), "rule__ChampionChallengerPort__NameAssignment_0");
					put(grammarAccess.getChampionChallengerPortAccess().getTypeAssignment_2(), "rule__ChampionChallengerPort__TypeAssignment_2");
					put(grammarAccess.getChampionChallengerPortAccess().getPercentageAssignment_6(), "rule__ChampionChallengerPort__PercentageAssignment_6");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.pellcorp.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (com.pellcorp.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
